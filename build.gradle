buildscript {
	ext {
		springBootVersion = '1.3.3.RELEASE'
		kotlinVersion = '1.0.0'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
	}
}

repositories {
	mavenCentral()
	maven { url 'http://repo.spring.io/snapshot' }
	maven { url 'https://dl.bintray.com/sdeleuze/maven/' }
	mavenLocal()
}

apply plugin: 'kotlin'
apply plugin: 'spring-boot' 

jar {
	baseName = 'geospatial-messenger'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

ext['spring.version'] = '4.3.0.BUILD-SNAPSHOT'
ext['jackson.version'] = '2.7.1'

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('cz.jirutka.spring:spring-data-jdbc-repository:0.5.1')

	compile("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}")
	// Always use the latest "dash revision", here -2
	compile('com.fasterxml.jackson.module:jackson-module-kotlin:2.7.1-2')

	compile('org.postgresql:postgresql:9.4.1208')
	compile('net.postgis:postgis-jdbc:2.2.0') {
		exclude module: 'postgresql'
	}

	compile('com.github.mayconbordin:postgis-geojson:1.1')

	testCompile('org.springframework.boot:spring-boot-starter-test')
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.11'
}
